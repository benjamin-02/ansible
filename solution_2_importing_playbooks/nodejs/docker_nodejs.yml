- name: Gather facts from _ansible_postgresql
  hosts: _ansible_postgresql
  tasks: [ ]
  # this is a no-op (dummy) task. we only need to get the private ip of postgresql

- name: configure nodejs instance
  hosts: _ansible_nodejs
  become: true
  vars:
    db_private_ip: "{{ hostvars[groups['_ansible_postgresql'][0]]['ansible_eth0']['ipv4']['address'] }}"
  tasks: 
    - name: create build directory
      file:
        path: /home/ec2-user/nodejs
        state: directory
        owner: root
        group: root
        mode: "0755"

    - name: copy files to nodejs node
      copy: 
        src: ../../given_files/todo-app-pern/server/
        # src: -> If src path is a directory, it is copied recursively. In this case, if path ends with “/”, 
        # only inside contents of that directory are copied to destination. 
        # Otherwise, if it does not end with “/”, the directory itself with all contents is copied. 
        # This behavior is similar to the rsync command line tool.
        dest: /home/ec2-user/nodejs/
        # dest: -> If src is a directory, this must be a directory too.
        # If dest is a non-existent path and if either dest ends with “/” or src is a directory, 
        # dest is created.

    - name: write DB's private ip to the .env file
      shell: sed -i 's/DB_HOST=<private ip of postgres>/DB_HOST={{ db_private_ip }}/g' /home/ec2-user/nodejs/.env
      # dont use here quotes around {{ }}. firstly, we dont want quotes in our .env files
      # secondly, shell module does not need quotes around jinja variable. 

    - name: copy the dockerfile
      copy: 
        src: Dockerfile
        dest: /home/ec2-user/nodejs

    - name: remove container and image if exist
      shell: "docker ps -q --filter 'name=ben_nodejs' && docker stop ben_nodejs && docker rm -fv ben_nodejs && docker image rm -f benbenjamin/nodejs || echo 'Not Found'"

    - name: build container image
      docker_image:
        name: benbenjamin/nodejs
        build:
          path: /home/ec2-user/nodejs
        source: build
        state: present

    - name: create nodejs docker container
      docker_container:
        name: ben_nodejs
        image: benbenjamin/nodejs
        state: started
        ports:
          - "5000:5000"
      register: container_info

    - name: print the container info
      debug:
        var: container_info